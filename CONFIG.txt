
bams:
    COLO829-TestA:
        somatic:
            A36971: /projects/analysis/analysis33/A36971/merge70788_mmp2-2.15/150bp/hg38_no_alt/A36971_6_lanes_dupsFlagged.bam
        normal:
            A36973: /projects/analysis/analysis33/A36973/merge72234_mmp2-2.15/125bp/hg38_no_alt/A36973_6_lanes_dupsFlagged.bam

# genome_name should match bams
genome_name:
    "hg38"

output_dir: "ploidetect_out"
temp_dir:

# Are we using custom cytobands? put "none" to disable cytoband filtering (not recommended)
cyto_path: auto

# ploidetect_ver should be a branch or tag.  Overriden by ploidetect_local_clone.
ploidetect_ver: v1.2.3
# Leave ploidetect_local_clone blank or 'None' to download from github
ploidetect_local_clone: 

# are we using docker?
install_ploidetect: 0


# sequence type - "short" for BGI/illumina and "ont" for nanopore
sequence_type: "short"

# make_windows.py threshold
#   Troubleshoot threshold for single blob/peak, either the case has no CNVs or the data is too noisy at that depth level.
#   If you're sure there are CNVs in the data,  adjust the threshold.
#
#   The size of the bins depends on the germline coverage.
#   The 100000 is the threshold for normal depth to create variable-width bins.
#   Ploidetect was developed for 40x normal, 80x tumor genomes.
#   If the ratio of tumor to normal is not 2:1, adjust the threshold accordingly. So for 40x/40x you might decide to use a larger threshold of 200000 to account for the tumor genome having more noise.
window_threshold: 100000

# Reference data.  Selected by 'genome_name' value.
# TODO: standard config should not refer to GSC - sync w/ gsc_build_config.py

#annotation:
#    hg19:
#        /gsc/resources/annotation/Homo_sapiens.GRCh37.87.gtf
#    hg38:
#        /gsc/resources/annotation/Homo_sapiens.GRCh38.100.gtf
array_positions:
    hg19:
        "resources/snp_arrays/hg19/SNP_array_positions.txt"
    hg38:
        "resources/snp_arrays/hg38/SNP_array_positions.txt"
